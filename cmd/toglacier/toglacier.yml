#
# toglacier tool configuration file
# https://github.com/rafaeljusto/toglacier
#

# paths is the list of all locations that you want to backup. It could be a
# directory or a specific file.
paths:
  - /usr/local/important-files-1
  - /usr/local/important-files-2

# database contains information about the local storage.
database:
  # type defines the format of the local storage. The possible values are
  # auditfile and boltdb. Audit file is a human readable storage that can store
  # less information than the BoltDB format. By default boltdb is used.
  type: boltdb

  # file stores the location of the database file. By default
  # "/var/log/toglacier/toglacier.db" or "c:\var\log\toglacier\toglacier.db" are
  # used depending on the OS.
  file: /var/log/toglacier/toglacier.db

# log contains information about the messages generated by the tool and library.
log:
  # file stores the location of the log file.
  file: /var/log/toglacier/toglacier.log

  # level defines the verbosity of the messages in the log file. The possible
  # values are debug, info, warning, error, fatal or panic. The default log
  # level is error.
  level: error

# keep backups defines the number of recent backups to preserve (by creation
# date). The idea is to remove older backups so we don't spent too much space in
# the cloud. All dependent backups (incremental parts) are also kept so you can
# rebuild successfully. By default we will keep the last 10 backups.
keep backups: 10

# backup secret is an optional parameter that increase the security of your
# backup in the cloud. If a passphrase is informed the backup tarball is
# encrypted (OFB) and signed (HMAC256). You will need to have the same
# passphrase when retrieving an encrypted backup. The passphrase can be
# encrypted with the 'toglacier encrypt' command to avoid having it in plain
# text.
backup secret: encrypted:/lFK9sxAXAL8CuM1GYwGsdj4UJQYEQ==

# modify tolerance defines the percentage of modified files that can be
# tolerated between two backups. This is important to detect ransomware
# infections, when all files in disk are encrypted by a computer virus. This
# value should be defined according to your behavior, if you usually modify all
# files in the backup folders this percentage should be high, otherwise you can
# decrease the value to a safety line. Values 0% or 100% disables this check. By
# default is 0%.
modify tolerance: 90%

# ignore patterns removes from the backup files that matches one or more
# patterns of this list. This is useful to avoid temporary or lock files in your
# backup.
ignore patterns:
  # In Windows, we should ignore owner files (Same Directory as Source File) as
  # we get read permission problems.
  #
  # When a previously saved file is opened for editing, for printing, or for
  # review, Word creates a temporary file that has a .doc file name extension.
  # This file name extension begins with a tilde (~) that is followed by a
  # dollar sign ($) that is followed by the remainder of the original file name.
  # This temporary file holds the logon name of person who opens the file. This
  # temporary file is called the "owner file."
  #
  # When you try to open a file that is available on a network and that is
  # already opened by someone else, this file supplies the user name for the
  # following error message: This file is already opened by user name. Would you
  # like to make a copy of this file for your use?
  - ^.*\~\$.*$

# email contains all data necessary to send an e-mail for periodic reports.
email:
  # server defines the e-mail server address without port.
  server: smtp.example.com

  # port is the e-mail server port. Usually it should be 587 for SMTP
  # communication (RFC 2476, section 3.1), but other servers around there use
  # 465, 2525 or 25.
  port: 587

  # username is used for authenticating with the e-mail server before sending
  # the e-mail. If no username is given the tool will not try to authenticate.
  username: user@example.com

  # password is used for authenticating with the e-mail server before sending
  # the e-mail. The password passphrase can be encrypted with the 'toglacier
  # encrypt' command to avoid having it in plain text. If no password is given
  # the tool will not try to authenticate.
  password: encrypted:i9dw0HZPOzNiFgtEtrr0tiY0W+YYlA==

  # from is the e-mail address that will be show as the sender.
  from: user@example.com

  # to defines a list of all e-mail addresses that will receive the e-mail.
  to:
    - report1@example.com
    - report2@example.com

  # format defines the e-mail content type, if you use an old e-mail client
  # without HTML support is usually a good idea to choose for plain text
  # content. The possible values are plain or html. By default html format is
  # used.
  format: html

# aws contains all necessary information to manage backups in the AWS Glacier
# Cloud Storage (https://aws.amazon.com/glacier).
aws:
  # account id is the identifier of you AWS account. This information can be
  # encrypted with the 'toglacier encrypt' command to avoid having it in plain
  # text. You can discover this information at
  # https://console.aws.amazon.com/billing/home?#/account
  account id: encrypted:DueEGILYe8OoEp49Qt7Gymms2sPuk5weSPiG6w==

  # access key id is the identification for a specific application. This
  # information can be encrypted with the 'toglacier encrypt' command to avoid
  # having it in plain text. To create a new access key follow the steps bellow.
  #
  #   1. Go to https://console.aws.amazon.com/iam/home?#/users
  #   2. Add a new user with only programmatic access type
  #   3. Attach existing policy AmazonGlacierFullAccess
  #   4. Store the access key id and the secret access key or download the CSV
  access key id: encrypted:XesW4TPKzT3Cgw1SCXeMB9Pb2TssRPCdM4mrPwlf4zWpzSZQ

  # secret access key contains the passphrase to authenticate with the AWS API.
  # This information can be encrypted with the 'toglacier encrypt' command to
  # avoid having it in plain text. You already got it if you performed the steps
  # for generating a new access key id.
  secret access key: encrypted:hHHZXW+Uuj+efOA7NR4QDAZh6tzLqoHFaUHkg/Yw1GE/3sJBi+4cn81LhR8OSVhNwv1rI6BR4fA=

  # region defines which Amazon datacenter is being used to store your AWS
  # Glacier vault. Possible values are at
  # http://docs.aws.amazon.com/general/latest/gr/rande.html#glacier_region
  # (Region column). To generate a new vault follow the steps bellow.
  #
  #   1. Go to https://console.aws.amazon.com/glacier/home
  #   2. Create a vault with the desired name and region
  #   3. For this tool there's no need to enable notifications
  region: us-east-1

  # vault specifies the AWS Glacier directory to store all backups. If you
  # performed the steps from region to generate a new vault you already have the
  # vault name.
  vault name: backup